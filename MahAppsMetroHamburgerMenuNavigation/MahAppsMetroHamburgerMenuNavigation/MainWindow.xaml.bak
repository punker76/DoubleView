<controls:MetroWindow x:Class="MahAppsMetroHamburgerMenuNavigation.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:viewModels="clr-namespace:MahAppsMetroHamburgerMenuNavigation.ViewModels"
                      xmlns:views="clr-namespace:MahAppsMetroHamburgerMenuNavigation.Views"
                      Title="MainWindow"
                      Width="600"
                      Height="450"
                      GlowBrush="{DynamicResource MahApps.Brushes.AccentBase}"
                      WindowStartupLocation="CenterScreen"
                      WindowTransitionsEnabled="False"
                      mc:Ignorable="d">

    <controls:MetroWindow.DataContext>
        <viewModels:ShellViewModel />
    </controls:MetroWindow.DataContext>

    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands ShowSeparators="False">
            <Button x:Name="GoBackButton"
                    Width="{Binding ElementName=HamburgerMenuControl, Path=CompactPaneLength}"
                    AutomationProperties.Name="Go back"
                    Click="GoBack_OnClick">
                <controls:FontIcon AutomationProperties.Name="Go back icon"
                                   FontSize="14"
                                   Glyph="&#xE72B;" />
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>

    <controls:MetroWindow.Resources>

        <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type viewModels:MenuItem}">
            <Grid Height="48">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:HamburgerMenu}}, Path=CompactPaneLength, Mode=OneWay}" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ContentControl Grid.Column="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{Binding Icon}"
                                Focusable="False" />
                <TextBlock Grid.Column="1"
                           VerticalAlignment="Center"
                           FontSize="16"
                           Text="{Binding Label}" />
            </Grid>
        </DataTemplate>

        <Style BasedOn="{StaticResource {x:Type Frame}}" TargetType="{x:Type Frame}">
            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />
            <Setter Property="ClipToBounds" Value="True" />
            <Setter Property="Resources">
            <Setter.Value>
                                    <DataTemplate DataType="{x:Type viewModels:AboutPageViewModel}">
                                        <views:AboutPage />
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type viewModels:AwesomePageViewModel}">
                                        <views:AwesomePage />
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type viewModels:BreakPageViewModel}">
                                        <views:BreakPage />
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type viewModels:BugsPageViewModel}">
                                        <views:BugsPage />
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type viewModels:MainPageViewModel}">
                                        <views:MainPage />
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type viewModels:SettingsPageViewModel}">
                                        <views:SettingsPage />
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type viewModels:UserPageViewModel}">
                                        <views:UserPage />
                                    </DataTemplate>
            </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <controls:TransitioningContentControl Content="{Binding CurrentNavigationTarget}"
                                                              RestartTransitionOnContentChange="True"
                                                              Transition="Custom">
                            <controls:TransitioningContentControl.CustomVisualStates>
                                <VisualState x:Name="CustomTransition">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="CurrentContentPresentationSite"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.150" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="CurrentContentPresentationSite"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="200" />
                                            <SplineDoubleKeyFrame KeySpline="0.1, 0.9, 0.2, 1"
                                                                  KeyTime="00:00:00.300"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="PreviousContentPresentationSite"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </controls:TransitioningContentControl.CustomVisualStates>
                        </controls:TransitioningContentControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </controls:MetroWindow.Resources>

    <controls:HamburgerMenu x:Name="HamburgerMenuControl"
                            DisplayMode="CompactInline"
                            IsPaneOpen="False"
                            ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                            ItemTemplate="{StaticResource MenuItemTemplate}"
                            ItemsSource="{Binding Menu}"
                            OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                            OptionsItemsSource="{Binding OptionsMenu}" >
        <controls:HamburgerMenu.Style>
            <Style TargetType="{x:Type controls:HamburgerMenu}" BasedOn="{StaticResource MahApps.Styles.HamburgerMenu}">
                <Setter Property="Content">
                    <Setter.Value>
                        <DataTemplate>
                            <ContentControl Content="{Binding CurrentNavigationTarget}">
                                <ContentControl.Resources>
                                </ContentControl.Resources>
                            </ContentControl>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </controls:HamburgerMenu.Style>
    </controls:HamburgerMenu>
</controls:MetroWindow>